<!DOCTYPE html>
<html>
<head>
    <link rel="icon" 
      type="image/png" 
      href="bluetoeX.png">
<meta charset="UTF-8">
    <meta charset=utf-8 />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>TOEX BLUE</title>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <script type="text/javascript" src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"></script> 

<script src='siccodes.js'></script>
<meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  
  
<style>
#overlay {
  position: fixed;
  display: none;
  width: 100%;
  height: 100%;
  top: 0; 
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0,0,0,0.5);
  z-index: 200000;
  cursor: pointer;
}

#text{
  position: absolute;
  top: 15px;
  right: 5px;

  color: white;
  transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
}

#myTable {
  border-collapse: collapse; /* Collapse borders */
  width: 100%; /* Full-width */
  border: 1px solid #ddd; /* Add a grey border */
  font-size: 14px; /* Increase font-size */
}

#myTable th, #myTable td {
  text-align: left; /* Left-align text */
  padding: 12px; /* Add padding */
}

#myTable tr {
  /* Add a bottom border to all table rows */
  border-bottom: 1px solid #ddd; 
}

#myTable tr.header, #myTable tr:hover {
  /* Add a grey background color to the table header and on hover */
  background-color: #f2f2f2;
}

#thaInput {
 

  width: 93%; /* Full-width */
  font-size: 16px; /* Increase font-size */
  padding: 12px 20px 12px 10px; /* Add some padding */
  border: 1px solid #ddd; /* Add a grey border */
  margin-bottom: 10px; /* Add some space below the input */
  margin-top: 12px; /* Add some space below the input */
}
</style>

<style type="text/css">
    #mynetwork {
      position:absolute;
      z-index: 1000000;    
      width: 67%;
      height: 100%;
right:0px;
display: none;

    }
  </style> 


<style>
    #tooltip {
      position: absolute;
  	z-index: 11000000000; 
top:0px;
left: 0px;

height: 100%;
width: 33%;
text-align: left;
background-color: #f2f2f2;
display: none;

overflow-y: scroll;
  overflow-x: hidden;
padding-left: 10px;
padding-left: 10px;
opacity: 0.95;



    }




body {font-family: Arial;}

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f2f2f2;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 1% 16px;
  transition: 0.3s;
  font-size: 14px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  @-webkit-animation: fadeEffect 1s;
  animation: fadeEffect 1s;
}

/* Fade in tabs */
@-webkit-keyframes fadeEffect {
  from {opacity: 0;}
  to {opacity: 1;}
}

@keyframes fadeEffect {
  from {opacity: 0;}
  to {opacity: 1;}
}
  </style> 



<style>

.accordion {
margin-left: 5px;
  background-color: #eee;
  color: #444;
  cursor: pointer;
  padding: 18px;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  font-size: 15px;
  transition: 0.4s;
  overflow: hidden;

}
.accordion2 {
margin-left: 5px;
  background-color: #eee;
  color: #444;
  cursor: pointer;
  padding: 18px;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  font-size: 15px;
  transition: 0.4s;
  overflow: hidden;

}

.active, .accordion:hover {
  background-color: #ccc;
white-space: pre-wrap;

}
.active, .accordion2:hover {
  background-color: #ccc;
white-space: pre-wrap;

}

.accordion:after {
//  content: '\002B';
  color: #777;
  font-weight: bold;
  float: right;



}
.accordion2:after {
//  content: '\002B';
  color: #777;
  font-weight: bold;
  float: right;



}

.active:after {
//  content: "\2212";

}

.panel {
 border-radius: 0px;
 margin-bottom: 0px;
  background-color: white;
  max-height: 0;
  overflow-y: scroll;
  overflow-x: hidden;
  height: 900px;
  transition: max-height 0.2s ease-out;
  width: 100%;
padding-left: 5px;
white-space: pre-wrap;
}


    body {
        margin: 0;
        padding: 0;
    }
    #map {
	position: absolute;
z-index:-1;
 
       width: 100%;
       height: 100%;

		
    }


#map2 {
position: absolute;
z-index: 100000000000000;
       width: 32%;
       height: 83%;
top: 17%;
margin-left: 0.2%;

    }
    </style>




<style type="text/css">

#boogoo {
position:absolute;
z-index: -1;
  top: 0px;
 
  width: 33.5%;
  height: 100%;
background-color: grey;
opacity: 0.3;
}

#tragger {
position: absolute
z-index:10
}
#myInput {
  
postition:absolute;
z-index: 3;
  width: 24.6%;
margin-left: 2px;
  font-size: 16px;
  padding: 12px 10px 12px 10px;
  border: 1px solid #ddd;

}


#hidenetwork {
  
postition: fixed;
z-index: 3000000;

  font-size: 16px;

  border: 1px solid #ddd;

}

#link_str{
postition:absolute;
z-index: 3;
  border: none;
  padding: 11px;
  text-align: center;
  text-decoration: none;
  top:0px;
  font-size: 16px;
  margin: 2px 0px;
  transition-duration: 0.4s;
  cursor: pointer;
  background-color: white;
  color: black;
  border: 2px solid #555555;
  width: 6.5%;
}

#link_str:hover {
  background-color: #555555;
  border: 2px solid #555555;
  color: white;
}


#ink_str{
postition:absolute;
z-index: 3;
  border: none;
  padding: 11px;
  text-align: center;
  text-decoration: none;
  top:0px;
  font-size: 16px;
  margin: 2px 0px;
  transition-duration: 0.4s;
  cursor: pointer;
  background-color: white;
  color: black;
  border: 2px solid #555555;
  width: 6.5%;
}

#ink_str:hover {
  background-color: #555555;
  border: 2px solid #555555;
  color: white;
}
</style>



 
</head>

<body style="overflow:hidden;">


<script>var apikey="";</script>






 <div id = 'mooting' class="dropdown" style = "left:24%; display: none; width: 9%; position: absolute; z-index: 999999999;">
    <button id = "dow" class="btn btn-primary dropdown-toggle" style= "width: 100%" type="button" data-toggle="dropdown">Search Results
    <span class="caret"></span></button>
    <ul class="dropdown-menu" id="section" style = "width: 100%">
    
    </ul>
 </div>
 
 
 

<div>
<div id='map'></div>







<input style="position: absolute; right: 1%; width: 30%" type="text" id="key" placeholder="Companies House API Key" title="From registered application" onclick = 'document.getElementById("key").style.color= "black"'>
<button style="position: absolute; right: 0%;"onClick='apikeychange()'>Use</button>
<div id="boogoo"><img src="bluelogo1.png" style="position: absolute; bottom: 0%; left: 1%; width: 50%;"></div>

<input type="text" id="myInput" placeholder="Search for companies/officers.." title="Type in a name etc." >

<input type='button' id='link_str' value='Search' onClick='myFunction(previousElementSibling.value)' ><input type="file" id="dealCsv" value='Upload a csv file' >




<div id='newsection' style="position: absolute; height:100%; width: 33.5%;">






<div>















</div>


</div>

<div id="dosc" style="opacity: 0.95; background-color: grey; color: white; padding: 10px; z-index: 100000000000000000000; position: absolute;  top: 50%;  left: 50%; height: 90%; width: 80%; border-radius: 25px; transform: translate(-50%, -50%);"><img src='newtoexlogo.png'><div style="overflow-y: scroll; height: 70%;"><br><br>Disclaimer<br><br>This tool is developed by the Tackling Organised Exploitation Programme (TOEX).<br><br>This tool & the insights derived from it are for intelligence purposes only and should be a considered a triage tool to promote efficiency within research. It is not intended to replace any recognised method currently used within the Criminal Justice process.<br><br>You use this tool entirely at your own risk; TOEX cannot accept responsibility for inaccuracies, false positives, wrongly drawn inferences & insights from information provided.<br><br>If exported data or code from this tool is transformed, appended to or interpreted - this should be explicitly stated, and TOEX cannot accept responsibility for this.<br><br>The Tackling Organised Exploitation Programme is happy to share this tool for the benefit of our policing colleagues, and always resolve to be helpful & cooperative - however, this tool is provided as-is, TOEX cannot cannot accept any offical responsibility for ongoing support of this product.<br><br><br><br>Sharing<br><br>Please feel free to share this tool or the underlying code with policing colleagues, but please do not share wider without explicit permission from the programme.<br><br><br>If shared, no TOEX branding is to be removed - and any transformations made should be explicitly documented.<br><br>This tool & the underlying code is shared under the same terms as detailed on this page - and is not to be distributed under any other terms.<br></div><br><button  style = "color: black" onClick="document.getElementById('dosc').style.display='none'">Confirm</button></div> 

<div id="overlay">
<input type='button' style='position: absolute; left: 35%; top: 5px; z-index:999999;' value='1ds' onClick='oneds()' ><input type='button' style='position: absolute; left: 38%; top: 5px; z-index:999999;' value='2ds' onClick='twods()' ><input type='button' value='3ds' style='position: absolute; left: 41%; top: 5px; z-index:999999;' onClick='threeds()' ><input type='button' id='hidenetwork' style='position: absolute; left: 93%; top: 5px; z-index:999999;' value='Hide Network' onClick='off()'>
  

</div>
<div id="mynetwork"></div>

<script>
    
    function uploadDealcsv () {}; 

  /*------ Method for read uploded csv file ------*/
  uploadDealcsv.prototype.getCsv = function(e) {
       
      let input = document.getElementById('dealCsv');
      input.addEventListener('change', function() {
      //input.style.display="none";

        if (this.files && this.files[0]) {

            var myFile = this.files[0];
            var reader = new FileReader();
            
            reader.addEventListener('load', function (e) {
                
                let csvdata = e.target.result; 
                parseCsv.getParsecsvdata(csvdata); // calling function for parse csv data 
                
            });
            
            reader.readAsBinaryString(myFile);
        }
      });
    }

    /*------- Method for parse csv data and display --------------*/
    uploadDealcsv.prototype.getParsecsvdata = function(data) {

        let parsedata = [];

        let newLinebrk = data.split("\n");
        for(let i = 0; i < newLinebrk.length -1; i++) {

            parsedata.push(newLinebrk[i].split(","))
            
            searchfunction(newLinebrk[i]);
        }
        
        hearse = parsedata;

        console.table(parsedata);
        
        
        
        //alert(hearse[2]);
    }


  
  var parseCsv = new uploadDealcsv();
  parseCsv.getCsv();
    
</script>





<script>

    
function searchfunction(term){
    
    
    
//document.getElementById('link_str').style.display = "none";
document.getElementById('myInput').style.width = "17%";
document.getElementById('dealCsv').style.display = "none";
document.getElementById('mooting').style.display = "block";
    
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search?q=" + term + "&items_per_page=100&start_index=0", false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();



var json = JSON.parse(hergle.responseText);


console.log(json);


if (json.total_results > 0) {
    
    document.getElementById("section").innerHTML = document.getElementById("section").innerHTML + "<li><a onClick = selectmunt(this)>"+ term + "</a></li>";

    
}

    
}
    
    
</script>






<script>

function selectmunt(selection) {
    
document.getElementById("newsection").innerHTML = "";



document.getElementById("dow").innerHTML = selection.innerHTML;

myFunction(selection.innerHTML);


}

</script>





<script>
    
    function apikeychange() {
    
 
    apikey = document.getElementById("key").value;
    document.getElementById("key").style.color = "green"
    }
    </script>








</div>




<script>
var caravan = L.layerGroup([]);
var haravan = L.layerGroup([]);



</script>


<script>


function off() {

document.getElementById("overlay").style.display = "none";
document.getElementById("mynetwork").style.display = "none";
document.getElementById("tooltip").style.display = "none";
document.getElementById("map2").style.display = "none";


}
	
</script>

<script>
var map = L.map('map').setView([54.505, -8], 6);

L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: 'TOEX Blue &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
}).addTo(map);



</script>



<script>
var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {

    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight) {
      panel.style.maxHeight = null;
    } else {
      panel.style.maxHeight = panel.scrollHeight + "px";
    }

  });
}
</script>





<script>

function oneds() {


var hammels = deeser;

if(hammels.indexOf("officer")<0){

var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;

var geos = json.registered_office_address.postal_code;




var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 


document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";



var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);addr


////console.log(slayson);






//// 1st loop ////


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    
if (checkstr2.indexOf("---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---")<0) {
	
if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: "Resigned " + slayson.items[i].officer_role, color: "red"}
]);

////console.log("from: " + elephant + "to: " + slayson.items[i].name);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " + slayson.items[i].officer_role + "</td> </tr>";
}


if (slayson.items[i].resigned_on == undefined){
    
edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: slayson.items[i].officer_role}
]);

////console.log("from: " + elephant + "to: " + slayson.items[i].name);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";

}

checkstr2 = checkstr2 + "---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---";


}




if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: elephant, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);
}






if (checkstr.indexOf(slayson.items[i].links.officer.appointments) < 0) {

rabbitlist = rabbitlist + slayson.items[i].links.officer.appointments + "-|-";

nodes.add([
  {id: slayson.items[i].links.officer.appointments, label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}

checkstr = checkstr + "-------" + hammels + "-------" + slayson.items[i].links.officer.appointments;



}

}



//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();
















network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});
}
    
if(hammels.indexOf("officer")>0){
    
    var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);






var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);


var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + geos).addTo(haravan);


haravan.addTo(map2);




var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 

document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";






//// 1st loop ////


for(var i =0; i < json.items.length; i++) {



if (checkstr2.indexOf("---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---")<0) {
if (checkstr2.indexOf("---" + json.items[i].appointed_to.company_number + "---frto---" + hammels + "---")<0) {    

if (json.items[i].resigned_on != undefined){
edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: "Resigned " + json.items[i].officer_role, color: "red"}
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + "Resigned " + json.items[i].officer_role + "</td> </tr>";
}



if (json.items[i].resigned_on == undefined){
    
edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: json.items[i].officer_role }
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + json.items[i].officer_role + "</td> </tr>";


}

checkstr2 = checkstr2 + "---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---";

}
}





if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: json.name, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}




if (checkstr.indexOf(json.items[i].appointed_to.company_number) < 0) {


nodes.add([
  {id: json.items[i].appointed_to.company_number, label: json.items[i].appointed_to.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);


}

checkstr = checkstr + "-------" + hammels + "-------" + json.items[i].appointed_to.company_number;








 
}




//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();


network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});    
}


}
</script>




<script>

function twods() {


var hammels = deeser;

if(hammels.indexOf("officer")<0){

var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;

var geos = json.registered_office_address.postal_code;




var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 


document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";



var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);


////console.log(slayson);






//// 1st loop ////


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    
if (checkstr2.indexOf("---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---")<0) {
	
	
if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: "Resigned " + slayson.items[i].officer_role, color: "red"}
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " +slayson.items[i].officer_role + "</td> </tr>";
}



if (slayson.items[i].resigned_on == undefined){

edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: slayson.items[i].officer_role}
]);

////console.log("from: " + elephant + "to: " + slayson.items[i].name);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";

}



checkstr2 = checkstr2 + "---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---";


}




if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: elephant, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);
}






if (checkstr.indexOf(slayson.items[i].links.officer.appointments) < 0) {

rabbitlist = rabbitlist + slayson.items[i].links.officer.appointments + "-|-";

nodes.add([
  {id: slayson.items[i].links.officer.appointments, label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}

checkstr = checkstr + "-------" + hammels + "-------" + slayson.items[i].links.officer.appointments;



}

}





//// 2nd loop ////


for(var rab =0; rab < rabbitlist.split("-|-").length -1; rab++) {




var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk" + rabbitlist.split("-|-")[rab] + "?items_per_page=1000&start_index=0" , false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);


////console.log(slayson);



for(var i = 0; i < slayson.items.length; i++) {



if (checkstr2.indexOf("---" + rabbitlist.split("-|-")[rab] + "---frto---" + slayson.items[i].appointed_to.company_number + "---")<0) {
if (checkstr2.indexOf("---" + slayson.items[i].appointed_to.company_number + "---frto---" + rabbitlist.split("-|-")[rab] + "---")<0) {    


if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  rabbitlist.split("-|-")[rab]  , to:  slayson.items[i].appointed_to.company_number, label: "Resigned " + slayson.items[i].officer_role, color: "red"}
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " +slayson.items[i].officer_role + "</td> </tr>";
}



if (slayson.items[i].resigned_on == undefined){
    
edges.add([
  {from:  rabbitlist.split("-|-")[rab]  , to:  slayson.items[i].appointed_to.company_number, label: slayson.items[i].officer_role }
]);

//console.log("2nd - from: " + rabbitlist.split("-|-")[rab] + " to: " +slayson.items[i].appointed_to.company_number);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + slayson.items[i].name + "</td><td>" + slayson.items[i].appointed_to.company_name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";

}


checkstr2 = checkstr2 + "---" + rabbitlist.split("-|-")[rab] + "---frto---" + slayson.items[i].appointed_to.company_number + "---";

}
}





if (checkstr.indexOf(rabbitlist.split("-|-")[rab]) < 0) {


nodes.add([
  {id: rabbitlist.split("-|-")[rab], label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}

//console.log("2nd loop a: " + rabbitlist.split("-|-")[rab]);


if (checkstr.indexOf(slayson.items[i].appointed_to.company_number) < 0) {

habbitlist = habbitlist + slayson.items[i].links.company + "-|-";

nodes.add([
  {id: slayson.items[i].appointed_to.company_number, label: slayson.items[i].appointed_to.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);

//console.log("2nd loop b: " + slayson.items[i].appointed_to.company_number);
}

checkstr = checkstr + "-------" + rabbitlist.split("-|-")[rab] + "-------" + slayson.items[i].appointed_to.company_number;








 }
}


//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();
















network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});

}
    
    
    
if(hammels.indexOf("officer")>0){
    
  
    
    var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);






var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);


var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + geos).addTo(haravan);


haravan.addTo(map2);




var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 

document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";






//// 1st loop ////


for(var i =0; i < json.items.length; i++) {



if (checkstr2.indexOf("---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---")<0) {
if (checkstr2.indexOf("---" + json.items[i].appointed_to.company_number + "---frto---" + hammels + "---")<0) {    


if (json.items[i].resigned_on != undefined){

edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: "Resigned " + json.items[i].officer_role, color: "red" }
]);



document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + "Resigned " + json.items[i].officer_role + "</td> </tr>";

}


if (json.items[i].resigned_on == undefined){

edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: json.items[i].officer_role }
]);



document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + json.items[i].officer_role + "</td> </tr>";

}
checkstr2 = checkstr2 + "---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---";

}
}





if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: json.name, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}




if (checkstr.indexOf(json.items[i].appointed_to.company_number) < 0) {


nodes.add([
  {id: json.items[i].appointed_to.company_number, label: json.items[i].appointed_to.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
  
  
]);
habbitlist = habbitlist + json.items[i].appointed_to.company_number + "-|-";

}

checkstr = checkstr + "-------" + hammels + "-------" + json.items[i].appointed_to.company_number;








 
}


//// 2nd loop ////


for(var rab =0; rab < habbitlist.split("-|-").length -1; rab++) {


var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + habbitlist.split("-|-")[rab] + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);




var coname = new XMLHttpRequest();

    coname.open("GET", "https://api.company-information.service.gov.uk/company/" + habbitlist.split("-|-")[rab], false);
    coname.setRequestHeader('Authorization', apikey);    

    coname.send();


var brayson = JSON.parse(coname.responseText);




for(var i = 0; i < slayson.items.length; i++) {



if (checkstr2.indexOf("---" + slayson.items[i].links.officer.appointments + "---frto---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---")<0) {
if (checkstr2.indexOf("---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---frto---" + slayson.items[i].links.officer.appointments + "---")<0) {    


if (slayson.items[i].resigned_on != undefined){
    
edges.add([
  {from:  slayson.items[i].links.officer.appointments  , to:  habbitlist.split("-|-")[rab].replace("/company/",""), label: "Resigned " + slayson.items[i].officer_role, color: "red" }
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + brayson.company_name + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " + slayson.items[i].officer_role + "</td> </tr>";

}



if (slayson.items[i].resigned_on == undefined){
    
edges.add([
  {from:  slayson.items[i].links.officer.appointments  , to:  habbitlist.split("-|-")[rab].replace("/company/",""), label: slayson.items[i].officer_role }
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + brayson.company_name + "</td><td>" + slayson.items[i].name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";

}


checkstr2 = checkstr2 + "---" + slayson.items[i].links.officer.appointments + "---frto---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---";

}
}





if (checkstr.indexOf(slayson.items[i].links.officer.appointments) < 0) {


nodes.add([
  {id: slayson.items[i].links.officer.appointments, label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);


}




if (checkstr.indexOf(habbitlist.split("-|-")[rab].replace("/company/","")) < 0) {

//habbitlist = habbitlist + slayson.items[i].links.company + "-|-";

nodes.add([
  {id: habbitlist.split("-|-")[rab].replace("/company/",""), label: brayson.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);


}

checkstr = checkstr + "-------" + slayson.items[i].links.officer.appointments + "-------" + habbitlist.split("-|-")[rab].replace("/company/","");








 }
}

//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();


network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});    
  
    
    
    
    
}
    
}

</script>



<script>

function threeds() {


var hammels = deeser;

if(hammels.indexOf("officer")<0){

var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;

var geos = json.registered_office_address.postal_code;




var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 


document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";



var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);


////console.log(slayson);






//// 1st loop ////


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    
if (checkstr2.indexOf("---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---")<0) {
	
if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: "Resigned " + slayson.items[i].officer_role, color: "red"}
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " +slayson.items[i].officer_role + "</td> </tr>";
}

if (slayson.items[i].resigned_on == undefined){
edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: slayson.items[i].officer_role}
]);

////console.log("from: " + elephant + "to: " + slayson.items[i].name);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";
}


checkstr2 = checkstr2 + "---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---";


}




if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: elephant, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);
}






if (checkstr.indexOf(slayson.items[i].links.officer.appointments) < 0) {

rabbitlist = rabbitlist + slayson.items[i].links.officer.appointments + "-|-";

nodes.add([
  {id: slayson.items[i].links.officer.appointments, label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}

checkstr = checkstr + "-------" + hammels + "-------" + slayson.items[i].links.officer.appointments;



}

}





//// 2nd loop ////


for(var rab =0; rab < rabbitlist.split("-|-").length -1; rab++) {




var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk" + rabbitlist.split("-|-")[rab] + "?items_per_page=1000&start_index=0" , false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);


////console.log(slayson);



for(var i = 0; i < slayson.items.length; i++) {



if (checkstr2.indexOf("---" + rabbitlist.split("-|-")[rab] + "---frto---" + slayson.items[i].appointed_to.company_number + "---")<0) {
if (checkstr2.indexOf("---" + slayson.items[i].appointed_to.company_number + "---frto---" + rabbitlist.split("-|-")[rab] + "---")<0) {    


if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  rabbitlist.split("-|-")[rab]  , to:  slayson.items[i].appointed_to.company_number, label: "Resigned " + slayson.items[i].officer_role, color: "red" }
]);

//console.log("2nd - from: " + rabbitlist.split("-|-")[rab] + " to: " +slayson.items[i].appointed_to.company_number);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + slayson.items[i].name + "</td><td>" + slayson.items[i].appointed_to.company_name + "</td> <td>" + "Resigned " + slayson.items[i].officer_role + "</td> </tr>";

}



if (slayson.items[i].resigned_on == undefined){
edges.add([
  {from:  rabbitlist.split("-|-")[rab]  , to:  slayson.items[i].appointed_to.company_number, label: slayson.items[i].officer_role }
]);

//console.log("2nd - from: " + rabbitlist.split("-|-")[rab] + " to: " +slayson.items[i].appointed_to.company_number);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + slayson.items[i].name + "</td><td>" + slayson.items[i].appointed_to.company_name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";

}



checkstr2 = checkstr2 + "---" + rabbitlist.split("-|-")[rab] + "---frto---" + slayson.items[i].appointed_to.company_number + "---";

}
}





if (checkstr.indexOf(rabbitlist.split("-|-")[rab]) < 0) {


nodes.add([
  {id: rabbitlist.split("-|-")[rab], label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}

//console.log("2nd loop a: " + rabbitlist.split("-|-")[rab]);


if (checkstr.indexOf(slayson.items[i].appointed_to.company_number) < 0) {

habbitlist = habbitlist + slayson.items[i].links.company + "-|-";

nodes.add([
  {id: slayson.items[i].appointed_to.company_number, label: slayson.items[i].appointed_to.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);

//console.log("2nd loop b: " + slayson.items[i].appointed_to.company_number);
}

checkstr = checkstr + "-------" + rabbitlist.split("-|-")[rab] + "-------" + slayson.items[i].appointed_to.company_number;








 }
}



//// 3rd loop ////


for(var rab =0; rab < habbitlist.split("-|-").length -1; rab++) {


var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk" + habbitlist.split("-|-")[rab] + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);


//console.log("3rd loop get officers");
//console.log(slayson);



var coname = new XMLHttpRequest();

    coname.open("GET", "https://api.company-information.service.gov.uk" + habbitlist.split("-|-")[rab], false);
    coname.setRequestHeader('Authorization', apikey);    

    coname.send();


var brayson = JSON.parse(coname.responseText);




for(var i = 0; i < slayson.items.length; i++) {



if (checkstr2.indexOf("---" + slayson.items[i].links.officer.appointments + "---frto---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---")<0) {
if (checkstr2.indexOf("---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---frto---" + slayson.items[i].links.officer.appointments + "---")<0) {    

if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  slayson.items[i].links.officer.appointments  , to:  habbitlist.split("-|-")[rab].replace("/company/",""), label: "Resigned " + slayson.items[i].officer_role, color: "red" }
]);

//console.log("3rd - from: " + slayson.items[i].links.officer.appointments + " to: " + habbitlist.split("-|-")[rab].replace("/company/",""));

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + brayson.company_name + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " + slayson.items[i].officer_role + "</td> </tr>";
}


if (slayson.items[i].resigned_on == undefined){
edges.add([
  {from:  slayson.items[i].links.officer.appointments  , to:  habbitlist.split("-|-")[rab].replace("/company/",""), label: slayson.items[i].officer_role }
]);

//console.log("3rd - from: " + slayson.items[i].links.officer.appointments + " to: " + habbitlist.split("-|-")[rab].replace("/company/",""));

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + brayson.company_name + "</td><td>" + slayson.items[i].name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";
}

checkstr2 = checkstr2 + "---" + slayson.items[i].links.officer.appointments + "---frto---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---";

}
}





if (checkstr.indexOf(slayson.items[i].links.officer.appointments) < 0) {


nodes.add([
  {id: slayson.items[i].links.officer.appointments, label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);

//console.log("3rd loop a: " + slayson.items[i].links.officer.appointments);
}




if (checkstr.indexOf(habbitlist.split("-|-")[rab].replace("/company/","")) < 0) {

//habbitlist = habbitlist + slayson.items[i].links.company + "-|-";

nodes.add([
  {id: habbitlist.split("-|-")[rab].replace("/company/",""), label: brayson.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);

//console.log("3rd loop b: " + habbitlist.split("-|-")[rab].replace("/company/",""));
}

checkstr = checkstr + "-------" + slayson.items[i].links.officer.appointments + "-------" + habbitlist.split("-|-")[rab].replace("/company/","");








 }
}


//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();
















network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});

}
    
    
    
if(hammels.indexOf("officer")>0){
    
  
    
    var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);






var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);


var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + geos).addTo(haravan);


haravan.addTo(map2);




var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 

document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";






//// 1st loop ////


for(var i =0; i < json.items.length; i++) {



if (checkstr2.indexOf("---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---")<0) {
if (checkstr2.indexOf("---" + json.items[i].appointed_to.company_number + "---frto---" + hammels + "---")<0) {    


if (json.items[i].resigned_on != undefined){
edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: "Resigned " + json.items[i].officer_role, color: "red" }
]);



document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + "Resigned " + json.items[i].officer_role + "</td> </tr>";
}


if (json.items[i].resigned_on == undefined){
edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: json.items[i].officer_role }
]);



document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + json.items[i].officer_role + "</td> </tr>";
}

checkstr2 = checkstr2 + "---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---";

}
}





if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: json.name, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}




if (checkstr.indexOf(json.items[i].appointed_to.company_number) < 0) {


nodes.add([
  {id: json.items[i].appointed_to.company_number, label: json.items[i].appointed_to.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
  
  
]);
habbitlist = habbitlist + json.items[i].appointed_to.company_number + "-|-";

}

checkstr = checkstr + "-------" + hammels + "-------" + json.items[i].appointed_to.company_number;








 
}


//// 2nd loop ////


for(var rab =0; rab < habbitlist.split("-|-").length -1; rab++) {


var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + habbitlist.split("-|-")[rab] + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);




var coname = new XMLHttpRequest();

    coname.open("GET", "https://api.company-information.service.gov.uk/company/" + habbitlist.split("-|-")[rab], false);
    coname.setRequestHeader('Authorization', apikey);    

    coname.send();


var brayson = JSON.parse(coname.responseText);




for(var i = 0; i < slayson.items.length; i++) {



if (checkstr2.indexOf("---" + slayson.items[i].links.officer.appointments + "---frto---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---")<0) {
if (checkstr2.indexOf("---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---frto---" + slayson.items[i].links.officer.appointments + "---")<0) {    


if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  slayson.items[i].links.officer.appointments  , to:  habbitlist.split("-|-")[rab].replace("/company/",""), label: "Resigned " + slayson.items[i].officer_role, color: "red" }
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + brayson.company_name + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " + slayson.items[i].officer_role + "</td> </tr>";
}


if (slayson.items[i].resigned_on == undefined){
edges.add([
  {from:  slayson.items[i].links.officer.appointments  , to:  habbitlist.split("-|-")[rab].replace("/company/",""), label: slayson.items[i].officer_role }
]);


document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + brayson.company_name + "</td><td>" + slayson.items[i].name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";
}


checkstr2 = checkstr2 + "---" + slayson.items[i].links.officer.appointments + "---frto---" + habbitlist.split("-|-")[rab].replace("/company/","") + "---";

}
}





if (checkstr.indexOf(slayson.items[i].links.officer.appointments) < 0) {

rabbitlist = rabbitlist + slayson.items[i].links.officer.appointments + "-|-";

nodes.add([
  {id: slayson.items[i].links.officer.appointments, label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);


}




if (checkstr.indexOf(habbitlist.split("-|-")[rab].replace("/company/","")) < 0) {



nodes.add([
  {id: habbitlist.split("-|-")[rab].replace("/company/",""), label: brayson.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);


}

checkstr = checkstr + "-------" + slayson.items[i].links.officer.appointments + "-------" + habbitlist.split("-|-")[rab].replace("/company/","");








 }
}


//// 3rd loop ////


for(var rab =0; rab < rabbitlist.split("-|-").length -1; rab++) {




var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk" + rabbitlist.split("-|-")[rab] + "?items_per_page=1000&start_index=0" , false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);


////console.log(slayson);



for(var i = 0; i < slayson.items.length; i++) {



if (checkstr2.indexOf("---" + rabbitlist.split("-|-")[rab] + "---frto---" + slayson.items[i].appointed_to.company_number + "---")<0) {
if (checkstr2.indexOf("---" + slayson.items[i].appointed_to.company_number + "---frto---" + rabbitlist.split("-|-")[rab] + "---")<0) {    


if (slayson.items[i].resigned_on != undefined){
    
edges.add([
  {from:  rabbitlist.split("-|-")[rab]  , to:  slayson.items[i].appointed_to.company_number, label: "Resigned " + slayson.items[i].officer_role, color: "red" }
]);

//console.log("2nd - from: " + rabbitlist.split("-|-")[rab] + " to: " +slayson.items[i].appointed_to.company_number);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + slayson.items[i].name + "</td><td>" + slayson.items[i].appointed_to.company_name + "</td> <td>" + "Resigned " + slayson.items[i].officer_role + "</td> </tr>";
}


if (slayson.items[i].resigned_on == undefined){
    
edges.add([
  {from:  rabbitlist.split("-|-")[rab]  , to:  slayson.items[i].appointed_to.company_number, label: slayson.items[i].officer_role }
]);

//console.log("2nd - from: " + rabbitlist.split("-|-")[rab] + " to: " +slayson.items[i].appointed_to.company_number);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + slayson.items[i].name + "</td><td>" + slayson.items[i].appointed_to.company_name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";
}

checkstr2 = checkstr2 + "---" + rabbitlist.split("-|-")[rab] + "---frto---" + slayson.items[i].appointed_to.company_number + "---";

}
}





if (checkstr.indexOf(rabbitlist.split("-|-")[rab]) < 0) {


nodes.add([
  {id: rabbitlist.split("-|-")[rab], label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}

//console.log("2nd loop a: " + rabbitlist.split("-|-")[rab]);


if (checkstr.indexOf(slayson.items[i].appointed_to.company_number) < 0) {



nodes.add([
  {id: slayson.items[i].appointed_to.company_number, label: slayson.items[i].appointed_to.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);

//console.log("2nd loop b: " + slayson.items[i].appointed_to.company_number);
}

checkstr = checkstr + "-------" + rabbitlist.split("-|-")[rab] + "-------" + slayson.items[i].appointed_to.company_number;








 }
}

//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();


network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});    
  
    
    
    
    
}
    
    
    
}

</script>



<script>

var colnt=1;

var deeser = "";


function netswork(brent) {

document.getElementById("toolsy").innerHTML = "";

var hammels = brent.parentNode.previousElementSibling.innerHTML.substring(brent.parentNode.previousElementSibling.innerHTML.length-8, brent.parentNode.previousElementSibling.innerHTML.length);

deeser = hammels;

var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
var elemunt = brent.parentNode.previousElementSibling.innerHTML;
var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "";

var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 
//document.getElementById("toolsy").innerHTML = elemunt;
document.getElementById("toolsection").innerHTML = elephant;
document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";



var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);


////console.log(slayson);






//// 1st loop ////


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    
if (checkstr2.indexOf("---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---")<0) {
	
	
if (slayson.items[i].resigned_on != undefined){
edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: "Resigned " + slayson.items[i].officer_role, color: "red"}
]);

////console.log("from: " + elephant + "to: " + slayson.items[i].name);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + "Resigned " +slayson.items[i].officer_role + "</td> </tr>";
}


if (slayson.items[i].resigned_on == undefined){
edges.add([
  {from:  hammels  , to:  slayson.items[i].links.officer.appointments, label: slayson.items[i].officer_role}
]);

////console.log("from: " + elephant + "to: " + slayson.items[i].name);

document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + elephant + "</td><td>" + slayson.items[i].name + "</td> <td>" + slayson.items[i].officer_role + "</td> </tr>";
}

checkstr2 = checkstr2 + "---" + hammels + "---frto---" + slayson.items[i].links.officer.appointments + "---";


}




if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: elephant, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);
}






if (checkstr.indexOf(slayson.items[i].links.officer.appointments) < 0) {

rabbitlist = rabbitlist + slayson.items[i].links.officer.appointments + "-|-";

nodes.add([
  {id: slayson.items[i].links.officer.appointments, label: slayson.items[i].name, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}

checkstr = checkstr + "-------" + hammels + "-------" + slayson.items[i].links.officer.appointments;



}

}




//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();
















network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});

}





</script>

<script>
    
    function vetswork(brent) {

document.getElementById("toolsy").innerHTML = "";

var hammels = brent.parentNode.innerHTML.split("URN: ")[1].split("ment")[0] + "ments";

deeser = hammels;

var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.name;
var elemunt = "<" + brent.parentNode.innerHTML.substring(brent.parentNode.innerHTML.indexOf("button class"), brent.parentNode.innerHTML.length);
var geos = brent.parentNode.innerHTML.split("Registered Address: ")[1].split("<br>")[0];


var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);


var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + geos).addTo(haravan);


haravan.addTo(map2);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "";

var target = elephant;
var rabbitlist = "";
var habbitlist = "";
var tabbitlist = "";


  var options = {

              
                physics: {

                    forceAtlas2Based: {

                        gravitationalConstant: -26,

                        centralGravity: 0.005,

                        springLength: 230,

                        springConstant: 0.18

                    },

                    maxVelocity: 146,

                    solver: 'forceAtlas2Based',

                    timestep: 0.35,

                    stabilization: {iterations: 150}

                },

nodes:{
shape: 'image', image: 'defaultnode.png', size: 30,
    fixed: {
      x:false,
      y:false
    },
    font: {
      color: '#343434',
      size: 14, // px
      face: 'arial',
      background: 'none',
      strokeWidth: 5, // px
      strokeColor: '#ffffff',
      align: 'center',
      multi: false,
      vadjust: 0,
      bold: {
        color: '#343434',
        size: 100, // px
        face: 'comic sans',
        vadjust: 0,
        mod: 'bold'
      }
}
},
edges:{color:'#a2d8e8'}



};            


document.getElementById("overlay").style.display = "block";
document.getElementById("mynetwork").style.display = "block";
document.getElementById("tooltip").style.display = "block";
 
document.getElementById("toolsy").innerHTML = elemunt;
document.getElementById("toolsection").innerHTML = elephant;
document.getElementById("defaultOpen").click();


if(document.getElementById("myTable").innerHTML.search("<tr>") > 0){

document.getElementById("myTable").innerHTML=document.getElementById("myTable").innerHTML.slice(0,document.getElementById("myTable").innerHTML.search("<tr>"));

}


var edges = new vis.DataSet();
var nodes = new vis.DataSet();
var container = document.getElementById('mynetwork');

var checkstr = "";
var checkstr2 = "";






//// 1st loop ////


for(var i =0; i < json.items.length; i++) {



if (checkstr2.indexOf("---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---")<0) {
if (checkstr2.indexOf("---" + json.items[i].appointed_to.company_number + "---frto---" + hammels + "---")<0) {    



if (json.items[i].resigned_on != undefined){
edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: "Resigned " + json.items[i].officer_role, color: "red" }
]);



document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + "Resigned " + json.items[i].officer_role + "</td> </tr>";
}


if (json.items[i].resigned_on == undefined){
edges.add([
  {from:  hammels  , to:  json.items[i].appointed_to.company_number, label: json.items[i].officer_role }
]);



document.getElementById("myTable").innerHTML = document.getElementById("myTable").innerHTML + "<tr> <td>" + json.name + "</td><td>" + json.items[i].appointed_to.company_name + "</td> <td>" + json.items[i].officer_role + "</td> </tr>";
}

checkstr2 = checkstr2 + "---" + hammels + "---frto---" + json.items[i].appointed_to.company_number + "---";

}
}





if (checkstr.indexOf(hammels) < 0) {


nodes.add([
  {id: hammels, label: json.name, font: {color:'red',size: 25}, shape: 'image', image: 'bluenodeofficer.png', size: 30}
]);
}




if (checkstr.indexOf(json.items[i].appointed_to.company_number) < 0) {


nodes.add([
  {id: json.items[i].appointed_to.company_number, label: json.items[i].appointed_to.company_name, shape: 'image', image: 'bluenodecompany.png', size: 30}
]);


}

checkstr = checkstr + "-------" + hammels + "-------" + json.items[i].appointed_to.company_number;








 
}




//// loop dern m9 ////



var data = {
    nodes: nodes,
    edges: edges
  };


var network = new vis.Network(container, data, options);

network.fit();
















network.on( 'click', function(preperties) {

document.getElementById("toolsy").innerHTML = "";
document.getElementById("toolsection").innerHTML = "";

    var idss = preperties.nodes;
    var clickedNodes = nodes.get(idss);


//console.log(clickedNodes[0].id);


hammels = clickedNodes[0].id;




if(hammels.indexOf("officer")<0){

//console.log("yes dane ");

	var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);



var elephant = json.company_name;
document.getElementById("toolsection").innerHTML = json.company_name;


var geos = json.registered_office_address.postal_code;



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);


//console.log(json);


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + "Company Name; " + json.company_name + "<br>" + "URN: " + json.company_number + "<br>" + "Company Type: " + json.type + "<br>" + "Company Status: " + json.company_status + "<br>" + "Created: " + json.date_of_creation + "<br><br>" + "Registered Address: " + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code;


if (json.previous_company_names !== undefined){
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Previous Company Names: ";


    
    for (i = 0; i < json.previous_company_names.length; i++) {
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  json.previous_company_names[i].name + ", ";
    
    }
    
}




    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Described Activities: " + json.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (json.sic_codes == siccodes[i].siccode) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);





if (document.getElementById("toolsy").innerHTML.indexOf("Company Officers")<0) {

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Company Officers"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";

}



}

}





if (document.getElementById("toolsy").innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + hammels + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";


    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Registration Number: ";
        
            
            document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>";
    
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined,","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Name: undefined","Name: Redacted");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("undefined","");
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + json.registered_office_address.address_line_1 + ", " +json.registered_office_address.address_line_2 + ", " + json.registered_office_address.locality + ", " + json.registered_office_address.region + ", " + json.registered_office_address.country + ", " + json.registered_office_address.postal_code + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);









var foogers = clickedNodes[0];

//console.log(foogers);




};



if(hammels.indexOf("officer")>0){
   //console.log(hammels.indexOf("officer")); 
var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + hammels, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var json = JSON.parse(hergle.responseText);    
    
//console.log(json);


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search/officers?q=" + json.name, false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var reyson = JSON.parse(hergle.responseText);    
    
//console.log(reyson);
    
document.getElementById("toolsection").innerHTML = json.name;

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Name: " + json.name;

if(json.date_of_birth != undefined){
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>DOB: XX/" + json.date_of_birth.month + "/" + json.date_of_birth.year;
}    

var cres = "";
var dres = "";

for (i = 0; i < json.items.length; i++) { 

if(json.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + json.items[i].country_of_residence
}

if(cres.indexOf(json.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + json.items[i].country_of_residence;     
}
}
}

if(json.items[i].nationality != undefined){
if(dres == ""){
dres = dres + json.items[i].nationality;     
}

if(dres.indexOf(json.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + json.items[i].nationality;     
}

}
}
}
    
    
document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Countries of Residence: " + cres;

document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Nationality: " + dres;
    
    for (i = 0; i < reyson.items.length; i++) {
     if(reyson.items[i].links.self == hammels){
     var geos = reyson.items[i].address.country;
     //console.log(geos);
     var carrot = reyson.items[i].address_snippet;
     
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>Registered Address: " + reyson.items[i].address_snippet;
        
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>" + reyson.items[i].description;
    
     }
    }
    


document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";    
    var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Appointments"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

document.getElementById("toolsy").appendChild(snowt);



for (i = 0; i < json.items.length; i++) { 
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br><br>";
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "Company Name: " + json.items[i].appointed_to.company_name + "<br>Company Number: " + json.items[i].appointed_to.company_number + "<br>Company Status: " + json.items[i].appointed_to.company_status + "<br>Appointed On: " + json.items[i].appointed_on;
    
    if(json.items[i].resigned_on != undefined) {
     document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Resigned On: " + json.items[i].resigned_on;   
    }
    
    var adds = json.items[i].address.premises + ", " + json.items[i].address.address_line_1 + ", " + json.items[i].address.address_line_2 + ", " + json.items[i].address.locality + ", " + json.items[i].address.region + ", " + json.items[i].address.country + ", " + json.items[i].address.postal_code;
    
    
    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    document.getElementById("toolsy").innerHTML = document.getElementById("toolsy").innerHTML + "<br>Officer Role: " + json.items[i].officer_role + "<br>Occupation: " + json.items[i].occupation;    
    
    
    
    }

var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	
//console.log(geos);

var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

if(carrot!=undefined){
var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(json.name + " - " + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map2);    
}
};
    
});

}

</script>


<script>

 var x = document.getElementById("Section 1");
    x.style.display = "none";

 var x = document.getElementById("Section 2");
    x.style.display = "none";

 var x = document.getElementById("Section 3");
    x.style.display = "none";

 var x = document.getElementById("Section 4");
    x.style.display = "none";

 var x = document.getElementById("Section 5");
    x.style.display = "none";

 var x = document.getElementById("Section 6");
    x.style.display = "none";

 var x = document.getElementById("Section 7");
    x.style.display = "none";

 var x = document.getElementById("Section 8");
    x.style.display = "none";

 var x = document.getElementById("Section 9");
    x.style.display = "none";

 var x = document.getElementById("Section 10");
    x.style.display = "none";

</script>




<div id="tooltip">
<h2 style = "font-size: 29px; height: 4%; overflow-y: scroll;" id="toolsection"> Give me the Datasets!! </h2>
<div style = "height: 3%" class="tab">
  <button  class="tablinks" onclick="openCity(event, 'Summary')" id="defaultOpen">Summary</button>
  <button  class="tablinks" onclick="openCity(event, 'Links')">Links</button>
  <button  class="tablinks" onclick="smolmap()" onclick="openCity(event, 'Geodata')">Geodata</button>
</div>

<div id="Summary" class="tabcontent" style="white-space: pre-wrap;">
<div id="toolsy" ></div>
  
</div>

<div id="Links" class="tabcontent">

<input type="text" id="thaInput" onkeyup="thaFunction()" placeholder="Search links..">
<table id="myTable">
 <tr style = "height: 3%" class="header">
<th style="height: 3%; width:33%;">From</th> 
<th style="height: 3%; width:33%;">To</th>
<th style="height: 3%; width:33%;">Link</th>  </tr>
</table>
</div>

<div id="Geodata" class="tabcontent">



</div>


</div>

<div id='map2'></div>

<iframe id='ends' src="https://suite.endole.co.uk/insight/company/00445790-tesco-plc" width="65%" height="100%" style='position: absolute; right : 0.5%; top: 5px; display: none;' sandbox>
</iframe>

<button id="bends" style="border-radius: 50%; width: 26px; position: absolute; top: 2px; right: 5px; display: none;" onclick="closeendole()">X</button>

<script>


function thaFunction() {
  // Declare variables 
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById("thaInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("myTable");
  tr = table.getElementsByTagName("tr");

  // Loop through all table rows, and hide those who don't match the search query
  for (i = 0; i < tr.length; i++) { 
    txtValue = "";
  for (j = 0; j < 3; j++) {
    td = tr[i].getElementsByTagName("td")[j];
    if (td) {
      txtValue = txtValue + td.textContent || td.innerText;
	    }}
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
     
  }
}
</script>



<script>


function endole(brent) {
    document.getElementById("ends").style.display = "block";
    document.getElementById("bends").style.display = "block";
    
    var endolein = brent.parentNode.previousElementSibling.innerHTML.substring(brent.parentNode.previousElementSibling.innerHTML.length-8, brent.parentNode.previousElementSibling.innerHTML.length);
    
    document.getElementById("ends").src = "https://suite.endole.co.uk/insight/company/" + endolein
    
    
}





function closeendole() {
    
     document.getElementById("ends").style.display = "none";
    document.getElementById("bends").style.display = "none";
    
}






function closetool() {


 var hammel = document.getElementById("tooltip");
    hammel.style.display = "none";
document.getElementById("map2").style.display = "none";
}



function linksher() {


for(var m = 0; m < links.length; m++) {
    var lings = links[m];

if (lings.from == document.getElementById("toolsection").innerHTML) {



}

 };

}



function myFunction(term) {






document.getElementById("newsection").innerHTML = "";

var count = 1;


//var input;
//  input = document.getElementById("myInput")

var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk/search?q=" + term + "&items_per_page=100&start_index=0", false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();



var json = JSON.parse(hergle.responseText);


//console.log(json);

for(var i = 0; i < json.items.length; i++) {
    var obj = json.items[i];

if(obj.kind != "searchresults#officer"){

var dowt = document.createElement("button");

var gowt = document.createAttribute("class");
gowt.value="accordion";
dowt.setAttributeNode(gowt);
dowt.innerHTML = "";



var ims = document.createElement("img");
dowt.appendChild(ims);
var bleat = document.createAttribute("src");
bleat.value = "bluetoeX.png";
ims.setAttributeNode(bleat);
var eat = document.createAttribute("style");
eat.value = "height: 50px; width: 50px;";
ims.setAttributeNode(eat);

// var dims = document.createElement("div");
// dowt.appendChild(dims);



dowt.innerHTML = dowt.innerHTML + " <br>" + obj.title + " - " + obj.company_number;

var rod = document.createAttribute("style");
rod.value = "display: flex; vertical-align: middle; text-align: center; margin: 0px;";
dowt.setAttributeNode(rod);




document.getElementById("newsection").appendChild(dowt);





var powt = document.createElement("div");


var bird = document.createElement("button");
var hird = document.createElement("button");

powt.appendChild(bird);
powt.appendChild(hird);

bird.innerHTML = "Network " + obj.title + " - " + obj.company_number;
hird.innerHTML = "Show Endole";

var ders = document.createAttribute("onClick");
var spers = document.createAttribute("onClick");

var rers = document.createAttribute("style");
var rer = document.createAttribute("style");


rers.value = "position: relative; top: 10px;"

rer.value = "position: relative; top: 10px;"
ders.value = "netswork(this)";
spers.value = "endole(this)";

bird.setAttributeNode(ders);
bird.setAttributeNode(rers);
hird.setAttributeNode(spers);
hird.setAttributeNode(rer);


powt.innerHTML = powt.innerHTML + "<br><br>";


var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Company Basics"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

powt.appendChild(snowt);



document.getElementById("newsection").appendChild(powt);
var rowt = document.createAttribute("class");
rowt.value = "panel";
powt.setAttributeNode(rowt);

var slem = document.createAttribute("style");
slem.value = ("position: absolute; height:100%; width: 33.5%; overflow-y:scroll;")
document.getElementById("newsection").setAttributeNode(slem);


var scowt = document.createElement("div");
powt.appendChild(scowt);






scowt.innerHTML = scowt.innerHTML + "<br>" + "Company Name; " + obj.title + "<br>" + "URN: " + obj.company_number + "<br>" + "Company Type: " + obj.company_type + "<br>" + "Company Status: " + obj.company_status + "<br>" + "Created: " + obj.date_of_creation + "<br><br>" + "Registered Address: " + obj.address_snippet;





count=count+1

}

if(obj.kind == "searchresults#officer") {
    
    var dowt = document.createElement("button");

var gowt = document.createAttribute("class");
gowt.value="accordion";
dowt.setAttributeNode(gowt);
dowt.innerHTML = "";



var ims = document.createElement("img");
dowt.appendChild(ims);
var bleat = document.createAttribute("src");
bleat.value = "bluetoeX.png";
ims.setAttributeNode(bleat);
var eat = document.createAttribute("style");
eat.value = "height: 50px; width: 50px;";
ims.setAttributeNode(eat);

// var dims = document.createElement("div");
// dowt.appendChild(dims);


if(obj.date_of_birth!=undefined){
dowt.innerHTML = dowt.innerHTML + " <br>" + obj.title + " - XX/" + obj.date_of_birth.month + "/" + obj.date_of_birth.year;
}

if(obj.date_of_birth==undefined){
dowt.innerHTML = dowt.innerHTML + " <br>" + obj.title ;
}

var rod = document.createAttribute("style");
rod.value = "display: flex; vertical-align: middle; text-align: center; margin: 0px;";
dowt.setAttributeNode(rod);




document.getElementById("newsection").appendChild(dowt);





var powt = document.createElement("div");


var bird = document.createElement("button");
var hird = document.createElement("button");

powt.appendChild(bird);
//powt.appendChild(hird);

bird.innerHTML = "Network " + obj.title;
hird.innerHTML = "Show Endole";

var ders = document.createAttribute("onClick");
var spers = document.createAttribute("onClick");

var rers = document.createAttribute("style");
var rer = document.createAttribute("style");
var ger = document.createAttribute("id");


rers.value = "position: relative; top: 10px;"
ger.value = "grund";

rer.value = "position: relative; top: 10px;"
ders.value = "vetswork(this)";
spers.value = "endole(this)";

bird.setAttributeNode(ders);
bird.setAttributeNode(rers);
hird.setAttributeNode(spers);
hird.setAttributeNode(rer);
bird.setAttributeNode(ger);

powt.innerHTML = powt.innerHTML + "<br><br>";


var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);


snowt.innerHTML = "Officer Details"

var blers = document.createAttribute("style");

blers.value = "position: relative; top: 10px;"
snowt.setAttributeNode(blers);


var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

powt.appendChild(snowt);



document.getElementById("newsection").appendChild(powt);
var rowt = document.createAttribute("class");
rowt.value = "panel";
powt.setAttributeNode(rowt);

var slem = document.createAttribute("style");
slem.value = ("position: absolute; height:100%; width: 33.5%; overflow-y:scroll;")
document.getElementById("newsection").setAttributeNode(slem);


var scowt = document.createElement("div");
powt.appendChild(scowt);






scowt.innerHTML = scowt.innerHTML + "<br>" + "Name: " + obj.title;

if(obj.date_of_birth != undefined){
    
    scowt.innerHTML = scowt.innerHTML + "<br>" + "DOB: XX/ " + obj.date_of_birth.month + "/" + obj.date_of_birth.year;
    
}


scowt.innerHTML = scowt.innerHTML + "<br><br>Registered Address: " + obj.address_snippet;

scowt.innerHTML = scowt.innerHTML + "<br><br>URN: " + obj.links.self



count=count+1

    
}





}


  

var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {


acc[i].addEventListener("click", function() {


if(this.nextElementSibling.innerHTML.indexOf("/officers/")<0){



var jergle = new XMLHttpRequest();

    jergle.open("GET", "https://api.company-information.service.gov.uk/company/" + this.innerHTML.substring(this.innerHTML.length-8, this.innerHTML.length), false);
    jergle.setRequestHeader('Authorization', apikey);    

    jergle.send();


var dayson = JSON.parse(jergle.responseText);



var elephant = dayson.company_name;

var geos = dayson.registered_office_address.postal_code

////console.log(dayson);

if (dayson.previous_company_names !== undefined){
    
   
    
if (this.nextElementSibling.innerHTML.indexOf("Previous Company Names: ")<0) {
    
this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>Previous Company Names: ";


    
    for (i = 0; i < dayson.previous_company_names.length; i++) {
    
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML +  dayson.previous_company_names[i].name + ", ";
    
    }
    
}
}


if (this.nextElementSibling.innerHTML.indexOf("Described Activities: ")<0) {
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br><br>Described Activities: " + dayson.sic_codes;
    
    for (i = 0; i < siccodes.length; i++) {
    if (dayson.sic_codes == siccodes[i].siccode) {
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML +  " - " + siccodes[i].description + ", ";
    
    }
    }
    
}





var smergle = new XMLHttpRequest();

    smergle.open("GET", "https://api.company-information.service.gov.uk/company/" + this.innerHTML.substring(this.innerHTML.length-8, this.innerHTML.length) + "/officers?items_per_page=100&start_index=0&order_by=appointed_on", false);
    smergle.setRequestHeader('Authorization', apikey);    

    smergle.send();


var slayson = JSON.parse(smergle.responseText);




////console.log(slayson);




if (this.nextElementSibling.innerHTML.indexOf("Company Officers")<0) {

this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br><br>";

var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

this.nextElementSibling.appendChild(snowt);

snowt.innerHTML = "Company Officers"



this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br><br>";


if (slayson != undefined) {
    
for (i = 0; i < slayson.items.length; i++) {
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Officer Name: " + slayson.items[i].name + "<br>";
    

    
    var adds1 = "";
    var adds2 = "";
    var adds3 = "";
    var adds4 = "";
    var adds5 = "";
    
   
    
    var adds1 = slayson.items[i].address.address_line_1;
    var adds2 = slayson.items[i].address.address_line_2;
    var adds3 = slayson.items[i].address.locality;
    var adds4 = slayson.items[i].address.postal_code;
    var adds5 = slayson.items[i].address.country;
    
    
    adds = adds1 + ", " + adds2 + ", " + adds3 + ", " + adds4 + ", " + adds5;
    
    
    if (slayson.items[i].date_of_birth != undefined) {
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Date of Birth: XX/" + slayson.items[i].date_of_birth.month + "/" + slayson.items[i].date_of_birth.year + "<br>";
    
    }
    
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Registered Address: " + adds + "<br>";
    
    
    if (slayson.items[i].country_of_residence != undefined) {
        
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Country of Residence: " + slayson.items[i].country_of_residence + "<br>";
    
    }
    
    
    if (slayson.items[i].nationality != undefined) {
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Nationality: " + slayson.items[i].nationality + "<br>";
    
    }
    
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Officer Role: " + slayson.items[i].officer_role + "<br>";
    
    
    if (slayson.items[i].occupation != undefined) {
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Occupation: " + slayson.items[i].occupation + "<br>";
    
    }
    
    
        
        
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Appointed: " + slayson.items[i].appointed_on + "<br>";




     if (slayson.items[i].resigned_on != undefined) {
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Resigned: " + slayson.items[i].resigned_on + "<br>";
    
    }
    
    
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>";

}



}

}





if (this.nextElementSibling.innerHTML.indexOf("Persons of Significant Control")<0) {
    
    
    var jmergle = new XMLHttpRequest();

    jmergle.open("GET", "https://api.company-information.service.gov.uk/company/" + this.innerHTML.substring(this.innerHTML.length-8, this.innerHTML.length) + "/persons-with-significant-control", false);
    jmergle.setRequestHeader('Authorization', apikey);    

    jmergle.send();


var dlayson = JSON.parse(jmergle.responseText);




////console.log(dlayson);



var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);

this.nextElementSibling.appendChild(snowt);

snowt.innerHTML = "Persons of Significant Control"



this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br><br>";


    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML.replaceAll("undefined,","");
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML.replaceAll("Name: undefined","Name: Redacted");
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML.replaceAll("undefined","");

if (dlayson.items != undefined) {


for (i = 0; i < dlayson.items.length; i++) {
    
    if (1<2) {
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Name: " + dlayson.items[i].name + "<br>";
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Kind: " + dlayson.items[i].kind + "<br>";
    
    
    if (dlayson.items[i].natures_of_control != undefined) {
        
        this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Nature of Control: ";
        
        for (j = 0; j < dlayson.items[i].natures_of_control.length; j++) {
            
            this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + dlayson.items[i].natures_of_control[j] + ", ";
            
            
        }
        
        this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>";
        
    }
    
    adds1 = "";
    adds2 = "";
    adds3 = "";
    adds4 = "";
    adds5 = "";
    adds6 = "";
    adds7 = "";
    
    if (dlayson.items[i].address != undefined) {
    
    var adds1 = dlayson.items[i].address.premises;
    var adds2 = dlayson.items[i].address.locality;
    var adds3 = dlayson.items[i].address.region;
    var adds4 = dlayson.items[i].address.postal_code;
    var adds5 = dlayson.items[i].address.country;
    var adds6 = dlayson.items[i].address.address_line_1;
    var adds7 = dlayson.items[i].address.address_line_2;
    
    }
    
    
    adds = adds1 + ", " + adds6 + ", " + adds7 +", " + adds2 +  ", " + adds3 + ", " + adds4 + ", " + adds5;
    
        
    
 //   this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>";
    
    

    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Regsitered Address: " + adds + "<br>";
    
    
    
        if (dlayson.items[i].identification != undefined) {
        
        this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Registration Number: ";
        
            
            this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + dlayson.items[i].identification.registration_number + "<br>";
            
        
        
    }
    
    
    
    
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>";
    
    
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML.replaceAll("undefined,","");
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML.replaceAll("Name: undefined","Name: Redacted");
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML.replaceAll("undefined","");
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML.replaceAll("Regsitered Address: , , , , , ,","");
     
    }
    

}


}


}









var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);

var carrot = " (" + dayson.registered_office_address.address_line_1 + ", " + dayson.registered_office_address.address_line_2 + ", " + dayson.registered_office_address.locality + ", " + geos + ")";

var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(elephant + carrot.replace(", undefined","")).addTo(haravan);


haravan.addTo(map);

map.setView([54.505, -8], 6);

this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "";


}
    
    
    
    
if(this.nextElementSibling.innerHTML.indexOf("/officers/")>0){


var hergle = new XMLHttpRequest();

    hergle.open("GET", "https://api.company-information.service.gov.uk" + this.nextElementSibling.innerHTML.split("URN: ")[1].split("ments")[0] + "ments", false);
    hergle.setRequestHeader('Authorization', apikey);    

    hergle.send();

var gertcerp = JSON.parse(hergle.responseText); 

var cres = "";
var dres = "";


for (i = 0; i < gertcerp.items.length; i++) { 

if(gertcerp.items[i].country_of_residence != undefined){

if (cres == ""){
    
cres = cres + gertcerp.items[i].country_of_residence
}

if(cres.indexOf(gertcerp.items[i].country_of_residence)<0){
if (cres != ""){
cres = cres + ", " + gertcerp.items[i].country_of_residence;     
}
}
}

if(gertcerp.items[i].nationality != undefined){
if(dres == ""){
dres = dres + gertcerp.items[i].nationality;     
}

if(dres.indexOf(gertcerp.items[i].nationality)<0){

if(dres != ""){
dres = dres + ", " + gertcerp.items[i].nationality;     
}

}
}
}



this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>Countries of Residence: " + cres;

this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br><br>Nationality: " + dres;



var geos = this.nextElementSibling.innerHTML.split("Registered Address: ")[1].split("<br>")[0];


var snowt = document.createElement("button");

var browt = document.createAttribute("class");
browt.value="accordion2";
snowt.setAttributeNode(browt);



var clowt = document.createAttribute("style");
clowt.value = "background-color: #a2d8e8";
snowt.setAttributeNode(clowt);


this.nextElementSibling.innerHTML + this.nextElementSibling.innerHTML + "<br><br><br>";
this.nextElementSibling.appendChild(snowt);

snowt.innerHTML = "Officer Appointments"



//console.log(gertcerp);

for (i = 0; i < gertcerp.items.length; i++) { 
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br><br>";
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "Company Name: " + gertcerp.items[i].appointed_to.company_name + "<br>Company Number: " + gertcerp.items[i].appointed_to.company_number + "<br>Company Status: " + gertcerp.items[i].appointed_to.company_status + "<br>Appointed On: " + gertcerp.items[i].appointed_on;
    
    if(gertcerp.items[i].resigned_on != undefined) {
     this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>Resigned On: " + gertcerp.items[i].resigned_on;   
    }
    
    var adds = gertcerp.items[i].address.premises + ", " + gertcerp.items[i].address.address_line_1 + ", " + gertcerp.items[i].address.address_line_2 + ", " + gertcerp.items[i].address.locality + ", " + gertcerp.items[i].address.region + ", " + gertcerp.items[i].address.country + ", " + gertcerp.items[i].address.postal_code;
    
    
    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>Registered Address: " + adds.replaceAll("undefined","");
    

    this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "<br>Officer Role: " + gertcerp.items[i].officer_role + "<br>Occupation: " + gertcerp.items[i].occupation;    
    
    
}




var LeafIcon = L.Icon.extend({
options: {
iconSize:     [25, 25],
}
});
var ercn = new LeafIcon({iconUrl:'bluetoeX.png'});




haravan.remove();
haravan = L.layerGroup([]);



	


var gergle = new XMLHttpRequest();

    gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + geos + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
    

    gergle.send();


    
var gergs = JSON.parse(gergle.responseText);


var mapsy = new L.Marker([gergs.results[0].geometry.location.lat, gergs.results[0].geometry.location.lng], {icon: ercn}).bindPopup(gertcerp.name + " - " +geos.replace(", undefined","")).addTo(haravan);


haravan.addTo(map);

map.setView([54.505, -8], 6);

this.nextElementSibling.innerHTML = this.nextElementSibling.innerHTML + "";


}
})


  acc[i].addEventListener("click", function() {

    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight) {
      panel.style.maxHeight = null;
    } else {
      panel.style.maxHeight = panel.scrollHeight + "px";
    } 
  
 })
}
}







</script>

<script>
 
function addsearch() {

var input;
  input = document.getElementById("myInput")
  
  
var gergle = new XMLHttpRequest();
gergle.open("POST", "https://maps.googleapis.com/maps/api/geocode/json?address=" + input.value + "&key=AIzaSyCXfWnhl5N4Do_1_u2Ip1px3tAAcM9q4_g", false);
gergle.send();
var gergs = JSON.parse(gergle.responseText);

console.log(gergs.results[0].geometry.location.lat);
console.log(gergs.results[0].geometry.location.lng);

var bergle = new XMLHttpRequest();
bergle.open("GET", "https://raptoranalytics.000webhostapp.com/placesapi.php?latlong=" + gergs.results[0].geometry.location.lat + "," + gergs.results[0].geometry.location.lng, false);
bergle.send();

var bergs = JSON.parse(bergle.responseText);

console.log(bergs);

    
    
    
}

    
</script>



<script>
function openCity(evt, cityName) {
if(cityName != "Geodata"){
document.getElementById("map2").style.display = "none";
}
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace("active", "");
  }
  document.getElementById(cityName).style.display = "block";
  evt.currentTarget.className += " active";
}
</script>


<script>
var map2 = L.map('map2').setView([54.505, -1.1], 6);

L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: 'TOEX Blue &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
}).addTo(map2);




document.getElementById("map2").style.display = "none";


function smolmap() {

document.getElementById("map2").style.display = "block";

openCity(event, 'Geodata')

};

</script>

</body>
</html>